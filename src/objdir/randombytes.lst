   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"randombytes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "randombytes.c"
  18              		.section	.text.randombytes,"ax",%progbits
  19              		.align	1
  20              		.global	randombytes
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	randombytes:
  26              	.LVL0:
  27              	.LFB1:
   1:randombytes.c **** /**
   2:randombytes.c ****  * WARNING
   3:randombytes.c ****  *
   4:randombytes.c ****  * This file generates a PREDICTABLE and NOT AT ALL RANDOM sequence of bytes.
   5:randombytes.c ****  *
   6:randombytes.c ****  * Its purpose is to support our testing suite and it MUST NOT be used in any
   7:randombytes.c ****  * scenario where you are expecting actual cryptography to happen.
   8:randombytes.c ****  */
   9:randombytes.c **** 
  10:randombytes.c **** #include "randombytes.h"
  11:randombytes.c **** #include <stdint.h>
  12:randombytes.c **** 
  13:randombytes.c **** static uint32_t seed[32] = { 3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3,
  14:randombytes.c ****                              2, 3, 8, 4, 6, 2, 6, 4, 3, 3, 8, 3, 2, 7, 9, 5
  15:randombytes.c ****                            };
  16:randombytes.c **** static uint32_t in[12];
  17:randombytes.c **** static uint32_t out[8];
  18:randombytes.c **** static int32_t outleft = 0;
  19:randombytes.c **** 
  20:randombytes.c **** #define ROTATE(x, b) (((x) << (b)) | ((x) >> (32 - (b))))
  21:randombytes.c **** #define MUSH(i, b) x = t[i] += (((x ^ seed[i]) + sum) ^ ROTATE(x, b));
  22:randombytes.c **** 
  23:randombytes.c **** static void surf(void) {
  24:randombytes.c ****     uint32_t t[12];
  25:randombytes.c ****     uint32_t x;
  26:randombytes.c ****     uint32_t sum = 0;
  27:randombytes.c ****     int32_t r;
  28:randombytes.c ****     int32_t i;
  29:randombytes.c ****     int32_t loop;
  30:randombytes.c **** 
  31:randombytes.c ****     for (i = 0; i < 12; ++i) {
  32:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
  33:randombytes.c ****     }
  34:randombytes.c ****     for (i = 0; i < 8; ++i) {
  35:randombytes.c ****         out[i] = seed[24 + i];
  36:randombytes.c ****     }
  37:randombytes.c ****     x = t[11];
  38:randombytes.c ****     for (loop = 0; loop < 2; ++loop) {
  39:randombytes.c ****         for (r = 0; r < 16; ++r) {
  40:randombytes.c ****             sum += 0x9e3779b9;
  41:randombytes.c ****             MUSH(0, 5)
  42:randombytes.c ****             MUSH(1, 7)
  43:randombytes.c ****             MUSH(2, 9)
  44:randombytes.c ****             MUSH(3, 13)
  45:randombytes.c ****             MUSH(4, 5)
  46:randombytes.c ****             MUSH(5, 7)
  47:randombytes.c ****             MUSH(6, 9)
  48:randombytes.c ****             MUSH(7, 13)
  49:randombytes.c ****             MUSH(8, 5)
  50:randombytes.c ****             MUSH(9, 7)
  51:randombytes.c ****             MUSH(10, 9)
  52:randombytes.c ****             MUSH(11, 13)
  53:randombytes.c ****         }
  54:randombytes.c ****         for (i = 0; i < 8; ++i) {
  55:randombytes.c ****             out[i] ^= t[i + 4];
  56:randombytes.c ****         }
  57:randombytes.c ****     }
  58:randombytes.c **** }
  59:randombytes.c **** 
  60:randombytes.c **** int randombytes(uint8_t *buf, size_t n) {
  28              		.loc 1 60 41 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  61:randombytes.c ****     while (n > 0) {
  32              		.loc 1 61 5 view .LVU1
  60:randombytes.c ****     while (n > 0) {
  33              		.loc 1 60 41 is_stmt 0 view .LVU2
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 6A4A     		ldr	r2, .L20
  47 0006 93B0     		sub	sp, sp, #76
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 112
  50 0008 4318     		adds	r3, r0, r1
  51 000a 1468     		ldr	r4, [r2]
  52 000c 0593     		str	r3, [sp, #20]
  53              		.loc 1 61 11 view .LVU3
  54 000e 0023     		movs	r3, #0
  55              	.LVL1:
  56              	.L2:
  57              		.loc 1 61 14 is_stmt 1 view .LVU4
  58 0010 0599     		ldr	r1, [sp, #20]
  59 0012 8842     		cmp	r0, r1
  60 0014 06D1     		bne	.L12
  61              		.loc 1 61 14 is_stmt 0 view .LVU5
  62 0016 0BB1     		cbz	r3, .L13
  63 0018 654B     		ldr	r3, .L20
  64 001a 1C60     		str	r4, [r3]
  65              	.L13:
  62:randombytes.c ****         if (!outleft) {
  63:randombytes.c ****             if (!++in[0]) {
  64:randombytes.c ****                 if (!++in[1]) {
  65:randombytes.c ****                     if (!++in[2]) {
  66:randombytes.c ****                         ++in[3];
  67:randombytes.c ****                     }
  68:randombytes.c ****                 }
  69:randombytes.c ****             }
  70:randombytes.c ****             surf();
  71:randombytes.c ****             outleft = 8;
  72:randombytes.c ****         }
  73:randombytes.c ****         *buf = (uint8_t) out[--outleft];
  74:randombytes.c ****         ++buf;
  75:randombytes.c ****         --n;
  76:randombytes.c ****     }
  77:randombytes.c ****     return 0;
  66              		.loc 1 77 5 is_stmt 1 view .LVU6
  78:randombytes.c **** }
  67              		.loc 1 78 1 is_stmt 0 view .LVU7
  68 001c 0020     		movs	r0, #0
  69              	.LVL2:
  70              		.loc 1 78 1 view .LVU8
  71 001e 13B0     		add	sp, sp, #76
  72              	.LCFI2:
  73              		.cfi_remember_state
  74              		.cfi_def_cfa_offset 36
  75              		@ sp needed
  76 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
  77              	.LVL3:
  78              	.L12:
  79              	.LCFI3:
  80              		.cfi_restore_state
  62:randombytes.c ****         if (!outleft) {
  81              		.loc 1 62 9 is_stmt 1 view .LVU9
  62:randombytes.c ****         if (!outleft) {
  82              		.loc 1 62 12 is_stmt 0 view .LVU10
  83 0024 002C     		cmp	r4, #0
  84 0026 40F0BA80 		bne	.L3
  63:randombytes.c ****                 if (!++in[1]) {
  85              		.loc 1 63 13 is_stmt 1 view .LVU11
  63:randombytes.c ****                 if (!++in[1]) {
  86              		.loc 1 63 18 is_stmt 0 view .LVU12
  87 002a 5368     		ldr	r3, [r2, #4]
  88 002c 0133     		adds	r3, r3, #1
  63:randombytes.c ****                 if (!++in[1]) {
  89              		.loc 1 63 16 view .LVU13
  90 002e 5360     		str	r3, [r2, #4]
  91 0030 53B9     		cbnz	r3, .L5
  64:randombytes.c ****                     if (!++in[2]) {
  92              		.loc 1 64 17 is_stmt 1 view .LVU14
  64:randombytes.c ****                     if (!++in[2]) {
  93              		.loc 1 64 22 is_stmt 0 view .LVU15
  94 0032 9368     		ldr	r3, [r2, #8]
  95 0034 0133     		adds	r3, r3, #1
  64:randombytes.c ****                     if (!++in[2]) {
  96              		.loc 1 64 20 view .LVU16
  97 0036 9360     		str	r3, [r2, #8]
  98 0038 33B9     		cbnz	r3, .L5
  65:randombytes.c ****                         ++in[3];
  99              		.loc 1 65 21 is_stmt 1 view .LVU17
  65:randombytes.c ****                         ++in[3];
 100              		.loc 1 65 26 is_stmt 0 view .LVU18
 101 003a D368     		ldr	r3, [r2, #12]
 102 003c 0133     		adds	r3, r3, #1
  65:randombytes.c ****                         ++in[3];
 103              		.loc 1 65 24 view .LVU19
 104 003e D360     		str	r3, [r2, #12]
 105 0040 13B9     		cbnz	r3, .L5
  66:randombytes.c ****                     }
 106              		.loc 1 66 25 is_stmt 1 view .LVU20
 107 0042 1369     		ldr	r3, [r2, #16]
 108 0044 0133     		adds	r3, r3, #1
 109 0046 1361     		str	r3, [r2, #16]
 110              	.LVL4:
 111              	.LBB4:
 112              	.LBB5:
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 113              		.loc 1 31 19 view .LVU21
 114              	.L5:
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 115              		.loc 1 31 19 is_stmt 0 view .LVU22
 116 0048 5A4E     		ldr	r6, .L20+4
 117 004a 5B4D     		ldr	r5, .L20+8
 118 004c 06AC     		add	r4, sp, #24
 119              	.LBE5:
 120              	.LBE4:
  60:randombytes.c ****     while (n > 0) {
 121              		.loc 1 60 41 view .LVU23
 122 004e 0023     		movs	r3, #0
 123              	.L7:
 124              	.LVL5:
 125              	.LBB7:
 126              	.LBB6:
  32:randombytes.c ****     }
 127              		.loc 1 32 9 is_stmt 1 view .LVU24
  32:randombytes.c ****     }
 128              		.loc 1 32 18 is_stmt 0 view .LVU25
 129 0050 56F8047B 		ldr	r7, [r6], #4
  32:randombytes.c ****     }
 130              		.loc 1 32 22 view .LVU26
 131 0054 55F8041F 		ldr	r1, [r5, #4]!
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 132              		.loc 1 31 25 view .LVU27
 133 0058 0133     		adds	r3, r3, #1
 134              	.LVL6:
  32:randombytes.c ****     }
 135              		.loc 1 32 22 view .LVU28
 136 005a 7940     		eors	r1, r1, r7
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 137              		.loc 1 31 19 view .LVU29
 138 005c 0C2B     		cmp	r3, #12
  32:randombytes.c ****     }
 139              		.loc 1 32 14 view .LVU30
 140 005e 44F8041B 		str	r1, [r4], #4
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 141              		.loc 1 31 25 is_stmt 1 view .LVU31
 142              	.LVL7:
  31:randombytes.c ****         t[i] = in[i] ^ seed[12 + i];
 143              		.loc 1 31 19 view .LVU32
 144 0062 F5D1     		bne	.L7
 145              	.LVL8:
  34:randombytes.c ****         out[i] = seed[24 + i];
 146              		.loc 1 34 19 view .LVU33
  35:randombytes.c ****     }
 147              		.loc 1 35 9 view .LVU34
  35:randombytes.c ****     }
 148              		.loc 1 35 16 is_stmt 0 view .LVU35
 149 0064 0323     		movs	r3, #3
 150 0066 0821     		movs	r1, #8
 151 0068 C2E90F13 		strd	r1, r3, [r2, #60]
 152 006c C2E90D33 		strd	r3, r3, [r2, #52]
  34:randombytes.c ****         out[i] = seed[24 + i];
 153              		.loc 1 34 24 is_stmt 1 view .LVU36
 154              	.LVL9:
  34:randombytes.c ****         out[i] = seed[24 + i];
 155              		.loc 1 34 19 view .LVU37
  35:randombytes.c ****     }
 156              		.loc 1 35 9 view .LVU38
  34:randombytes.c ****         out[i] = seed[24 + i];
 157              		.loc 1 34 24 view .LVU39
  34:randombytes.c ****         out[i] = seed[24 + i];
 158              		.loc 1 34 19 view .LVU40
  35:randombytes.c ****     }
 159              		.loc 1 35 9 view .LVU41
  35:randombytes.c ****     }
 160              		.loc 1 35 16 is_stmt 0 view .LVU42
 161 0070 0221     		movs	r1, #2
 162 0072 0723     		movs	r3, #7
 163 0074 C2E91113 		strd	r1, r3, [r2, #68]
  34:randombytes.c ****         out[i] = seed[24 + i];
 164              		.loc 1 34 24 is_stmt 1 view .LVU43
 165              	.LVL10:
  34:randombytes.c ****         out[i] = seed[24 + i];
 166              		.loc 1 34 19 view .LVU44
  35:randombytes.c ****     }
 167              		.loc 1 35 9 view .LVU45
  35:randombytes.c ****     }
 168              		.loc 1 35 16 is_stmt 0 view .LVU46
 169 0078 0924     		movs	r4, #9
 170 007a 0523     		movs	r3, #5
 171 007c C2E91343 		strd	r4, r3, [r2, #76]
  34:randombytes.c ****         out[i] = seed[24 + i];
 172              		.loc 1 34 24 is_stmt 1 view .LVU47
 173              	.LVL11:
  34:randombytes.c ****         out[i] = seed[24 + i];
 174              		.loc 1 34 19 view .LVU48
  37:randombytes.c ****     for (loop = 0; loop < 2; ++loop) {
 175              		.loc 1 37 5 view .LVU49
 176 0080 DDE906BA 		ldrd	fp, r10, [sp, #24]
 177 0084 089B     		ldr	r3, [sp, #32]
 178 0086 0193     		str	r3, [sp, #4]
  37:randombytes.c ****     for (loop = 0; loop < 2; ++loop) {
 179              		.loc 1 37 7 is_stmt 0 view .LVU50
 180 0088 1199     		ldr	r1, [sp, #68]
 181              	.LVL12:
  38:randombytes.c ****         for (r = 0; r < 16; ++r) {
 182              		.loc 1 38 5 is_stmt 1 view .LVU51
  38:randombytes.c ****         for (r = 0; r < 16; ++r) {
 183              		.loc 1 38 25 view .LVU52
 184 008a 099B     		ldr	r3, [sp, #36]
 185 008c 0293     		str	r3, [sp, #8]
  26:randombytes.c ****     int32_t r;
 186              		.loc 1 26 14 is_stmt 0 view .LVU53
 187 008e 0023     		movs	r3, #0
 188              	.LVL13:
 189              	.L8:
  39:randombytes.c ****             sum += 0x9e3779b9;
 190              		.loc 1 39 23 is_stmt 1 view .LVU54
 191 0090 DDE91049 		ldrd	r4, r9, [sp, #64]
 192 0094 CDF80C90 		str	r9, [sp, #12]
 193 0098 DFF82091 		ldr	r9, .L20+12
 194 009c 9944     		add	r9, r3, r9
 195 009e DDE90A8E 		ldrd	r8, lr, [sp, #40]
 196 00a2 DDE90CC7 		ldrd	ip, r7, [sp, #48]
 197 00a6 DDE90E65 		ldrd	r6, r5, [sp, #56]
 198 00aa CDF81090 		str	r9, [sp, #16]
 199 00ae 00E0     		b	.L9
 200              	.LVL14:
 201              	.L14:
  52:randombytes.c ****         }
 202              		.loc 1 52 13 is_stmt 0 view .LVU55
 203 00b0 0391     		str	r1, [sp, #12]
 204              	.L9:
  40:randombytes.c ****             MUSH(0, 5)
 205              		.loc 1 40 13 is_stmt 1 view .LVU56
  40:randombytes.c ****             MUSH(0, 5)
 206              		.loc 1 40 17 is_stmt 0 view .LVU57
 207 00b2 A3F1C343 		sub	r3, r3, #1635778560
 208              	.LVL15:
  40:randombytes.c ****             MUSH(0, 5)
 209              		.loc 1 40 17 view .LVU58
 210 00b6 A3F59103 		sub	r3, r3, #4751360
 211              	.LVL16:
  40:randombytes.c ****             MUSH(0, 5)
 212              		.loc 1 40 17 view .LVU59
 213 00ba A3F24763 		subw	r3, r3, #1607
 214              	.LVL17:
  41:randombytes.c ****             MUSH(1, 7)
 215              		.loc 1 41 13 is_stmt 1 view .LVU60
 216 00be 81F00309 		eor	r9, r1, #3
 217 00c2 9944     		add	r9, r9, r3
 218 00c4 89EAF169 		eor	r9, r9, r1, ror #27
 219 00c8 CB44     		add	fp, fp, r9
 220              	.LVL18:
  42:randombytes.c ****             MUSH(2, 9)
 221              		.loc 1 42 13 view .LVU61
 222 00ca 8BF00101 		eor	r1, fp, #1
 223 00ce 1944     		add	r1, r1, r3
 224 00d0 81EA7B61 		eor	r1, r1, fp, ror #25
 225 00d4 8A44     		add	r10, r10, r1
 226              	.LVL19:
  43:randombytes.c ****             MUSH(3, 13)
 227              		.loc 1 43 13 view .LVU62
 228 00d6 8AF00401 		eor	r1, r10, #4
 229 00da DDF80490 		ldr	r9, [sp, #4]
 230 00de 1944     		add	r1, r1, r3
 231 00e0 81EAFA51 		eor	r1, r1, r10, ror #23
 232 00e4 8944     		add	r9, r9, r1
  44:randombytes.c ****             MUSH(4, 5)
 233              		.loc 1 44 13 is_stmt 0 view .LVU63
 234 00e6 89F00101 		eor	r1, r9, #1
 235 00ea 1944     		add	r1, r1, r3
 236 00ec 81EAF941 		eor	r1, r1, r9, ror #19
  43:randombytes.c ****             MUSH(3, 13)
 237              		.loc 1 43 13 view .LVU64
 238 00f0 CDF80490 		str	r9, [sp, #4]
 239              	.LVL20:
  44:randombytes.c ****             MUSH(4, 5)
 240              		.loc 1 44 13 is_stmt 1 view .LVU65
 241 00f4 DDF80890 		ldr	r9, [sp, #8]
 242              	.LVL21:
  44:randombytes.c ****             MUSH(4, 5)
 243              		.loc 1 44 13 is_stmt 0 view .LVU66
 244 00f8 8944     		add	r9, r9, r1
  45:randombytes.c ****             MUSH(5, 7)
 245              		.loc 1 45 13 view .LVU67
 246 00fa 89F00501 		eor	r1, r9, #5
 247 00fe 1944     		add	r1, r1, r3
 248 0100 81EAF961 		eor	r1, r1, r9, ror #27
 249 0104 8844     		add	r8, r8, r1
  46:randombytes.c ****             MUSH(6, 9)
 250              		.loc 1 46 13 view .LVU68
 251 0106 88F00901 		eor	r1, r8, #9
 252 010a 1944     		add	r1, r1, r3
 253 010c 81EA7861 		eor	r1, r1, r8, ror #25
 254 0110 8E44     		add	lr, lr, r1
  47:randombytes.c ****             MUSH(7, 13)
 255              		.loc 1 47 13 view .LVU69
 256 0112 8EF00201 		eor	r1, lr, #2
 257 0116 1944     		add	r1, r1, r3
 258 0118 81EAFE51 		eor	r1, r1, lr, ror #23
 259 011c 8C44     		add	ip, ip, r1
  48:randombytes.c ****             MUSH(8, 5)
 260              		.loc 1 48 13 view .LVU70
 261 011e 8CF00601 		eor	r1, ip, #6
 262 0122 1944     		add	r1, r1, r3
 263 0124 81EAFC41 		eor	r1, r1, ip, ror #19
 264 0128 0F44     		add	r7, r7, r1
  49:randombytes.c ****             MUSH(9, 7)
 265              		.loc 1 49 13 view .LVU71
 266 012a 87F00501 		eor	r1, r7, #5
 267 012e 1944     		add	r1, r1, r3
 268 0130 81EAF761 		eor	r1, r1, r7, ror #27
 269 0134 0E44     		add	r6, r6, r1
  50:randombytes.c ****             MUSH(10, 9)
 270              		.loc 1 50 13 view .LVU72
 271 0136 86F00301 		eor	r1, r6, #3
 272 013a 1944     		add	r1, r1, r3
 273 013c 81EA7661 		eor	r1, r1, r6, ror #25
 274 0140 0D44     		add	r5, r5, r1
  51:randombytes.c ****             MUSH(11, 13)
 275              		.loc 1 51 13 view .LVU73
 276 0142 85F00501 		eor	r1, r5, #5
 277 0146 1944     		add	r1, r1, r3
 278 0148 81EAF551 		eor	r1, r1, r5, ror #23
 279 014c 0C44     		add	r4, r4, r1
  52:randombytes.c ****         }
 280              		.loc 1 52 13 view .LVU74
 281 014e 84F00801 		eor	r1, r4, #8
  44:randombytes.c ****             MUSH(4, 5)
 282              		.loc 1 44 13 view .LVU75
 283 0152 CDF80890 		str	r9, [sp, #8]
 284              	.LVL22:
  45:randombytes.c ****             MUSH(5, 7)
 285              		.loc 1 45 13 is_stmt 1 view .LVU76
  46:randombytes.c ****             MUSH(6, 9)
 286              		.loc 1 46 13 view .LVU77
  47:randombytes.c ****             MUSH(7, 13)
 287              		.loc 1 47 13 view .LVU78
  48:randombytes.c ****             MUSH(8, 5)
 288              		.loc 1 48 13 view .LVU79
  49:randombytes.c ****             MUSH(9, 7)
 289              		.loc 1 49 13 view .LVU80
  50:randombytes.c ****             MUSH(10, 9)
 290              		.loc 1 50 13 view .LVU81
  51:randombytes.c ****             MUSH(11, 13)
 291              		.loc 1 51 13 view .LVU82
  52:randombytes.c ****         }
 292              		.loc 1 52 13 view .LVU83
 293 0156 1944     		add	r1, r1, r3
 294 0158 DDF80C90 		ldr	r9, [sp, #12]
 295 015c 81EAF441 		eor	r1, r1, r4, ror #19
 296 0160 4944     		add	r1, r1, r9
 297              	.LVL23:
  39:randombytes.c ****             sum += 0x9e3779b9;
 298              		.loc 1 39 29 view .LVU84
  39:randombytes.c ****             sum += 0x9e3779b9;
 299              		.loc 1 39 23 view .LVU85
 300 0162 DDF81090 		ldr	r9, [sp, #16]
 301 0166 4B45     		cmp	r3, r9
 302 0168 A2D1     		bne	.L14
 303 016a CDE90A8E 		strd	r8, lr, [sp, #40]
 304 016e CDE90E65 		strd	r6, r5, [sp, #56]
 305 0172 134D     		ldr	r5, .L20+16
 306 0174 CDE90CC7 		strd	ip, r7, [sp, #48]
 307 0178 CDE91041 		strd	r4, r1, [sp, #64]
 308              	.LVL24:
  54:randombytes.c ****             out[i] ^= t[i + 4];
 309              		.loc 1 54 23 view .LVU86
 310 017c 09AF     		add	r7, sp, #36
  54:randombytes.c ****             out[i] ^= t[i + 4];
 311              		.loc 1 54 16 is_stmt 0 view .LVU87
 312 017e 0024     		movs	r4, #0
 313              	.LVL25:
 314              	.L10:
  55:randombytes.c ****         }
 315              		.loc 1 55 13 is_stmt 1 view .LVU88
  55:randombytes.c ****         }
 316              		.loc 1 55 16 is_stmt 0 view .LVU89
 317 0180 2B68     		ldr	r3, [r5]
  55:randombytes.c ****         }
 318              		.loc 1 55 20 view .LVU90
 319 0182 57F8046F 		ldr	r6, [r7, #4]!
  54:randombytes.c ****             out[i] ^= t[i + 4];
 320              		.loc 1 54 28 view .LVU91
 321 0186 0134     		adds	r4, r4, #1
 322              	.LVL26:
  55:randombytes.c ****         }
 323              		.loc 1 55 20 view .LVU92
 324 0188 5E40     		eors	r6, r6, r3
  54:randombytes.c ****             out[i] ^= t[i + 4];
 325              		.loc 1 54 23 view .LVU93
 326 018a 082C     		cmp	r4, #8
  55:randombytes.c ****         }
 327              		.loc 1 55 20 view .LVU94
 328 018c 45F8046B 		str	r6, [r5], #4
  54:randombytes.c ****             out[i] ^= t[i + 4];
 329              		.loc 1 54 28 is_stmt 1 view .LVU95
 330              	.LVL27:
  54:randombytes.c ****             out[i] ^= t[i + 4];
 331              		.loc 1 54 23 view .LVU96
 332 0190 F6D1     		bne	.L10
  38:randombytes.c ****         for (r = 0; r < 16; ++r) {
 333              		.loc 1 38 30 view .LVU97
 334              	.LVL28:
  38:randombytes.c ****         for (r = 0; r < 16; ++r) {
 335              		.loc 1 38 25 view .LVU98
 336 0192 049D     		ldr	r5, [sp, #16]
 337 0194 0B4E     		ldr	r6, .L20+20
 338 0196 094B     		ldr	r3, .L20+12
 339 0198 B542     		cmp	r5, r6
 340 019a 7FF479AF 		bne	.L8
 341              	.LVL29:
 342              	.L3:
  38:randombytes.c ****         for (r = 0; r < 16; ++r) {
 343              		.loc 1 38 25 is_stmt 0 view .LVU99
 344              	.LBE6:
 345              	.LBE7:
  73:randombytes.c ****         ++buf;
 346              		.loc 1 73 9 is_stmt 1 view .LVU100
  73:randombytes.c ****         ++buf;
 347              		.loc 1 73 30 is_stmt 0 view .LVU101
 348 019e 013C     		subs	r4, r4, #1
  73:randombytes.c ****         ++buf;
 349              		.loc 1 73 29 view .LVU102
 350 01a0 02EB8403 		add	r3, r2, r4, lsl #2
  73:randombytes.c ****         ++buf;
 351              		.loc 1 73 16 view .LVU103
 352 01a4 5B6B     		ldr	r3, [r3, #52]
 353 01a6 00F8013B 		strb	r3, [r0], #1
 354              	.LVL30:
  74:randombytes.c ****         --n;
 355              		.loc 1 74 9 is_stmt 1 view .LVU104
  75:randombytes.c ****     }
 356              		.loc 1 75 9 view .LVU105
  74:randombytes.c ****         --n;
 357              		.loc 1 74 9 is_stmt 0 view .LVU106
 358 01aa 0123     		movs	r3, #1
 359 01ac 30E7     		b	.L2
 360              	.L21:
 361 01ae 00BF     		.align	2
 362              	.L20:
 363 01b0 00000000 		.word	.LANCHOR0
 364 01b4 04000000 		.word	.LANCHOR0+4
 365 01b8 2C000000 		.word	.LANCHOR1+44
 366 01bc 909B77E3 		.word	-478700656
 367 01c0 34000000 		.word	.LANCHOR0+52
 368 01c4 2037EFC6 		.word	-957401312
 369              		.cfi_endproc
 370              	.LFE1:
 372              		.section	.rodata
 373              		.align	2
 374              		.set	.LANCHOR1,. + 0
 377              	seed:
 378 0000 03000000 		.word	3
 379 0004 01000000 		.word	1
 380 0008 04000000 		.word	4
 381 000c 01000000 		.word	1
 382 0010 05000000 		.word	5
 383 0014 09000000 		.word	9
 384 0018 02000000 		.word	2
 385 001c 06000000 		.word	6
 386 0020 05000000 		.word	5
 387 0024 03000000 		.word	3
 388 0028 05000000 		.word	5
 389 002c 08000000 		.word	8
 390 0030 09000000 		.word	9
 391 0034 07000000 		.word	7
 392 0038 09000000 		.word	9
 393 003c 03000000 		.word	3
 394 0040 02000000 		.word	2
 395 0044 03000000 		.word	3
 396 0048 08000000 		.word	8
 397 004c 04000000 		.word	4
 398 0050 06000000 		.word	6
 399 0054 02000000 		.word	2
 400 0058 06000000 		.word	6
 401 005c 04000000 		.word	4
 402 0060 03000000 		.word	3
 403 0064 03000000 		.word	3
 404 0068 08000000 		.word	8
 405 006c 03000000 		.word	3
 406 0070 02000000 		.word	2
 407 0074 07000000 		.word	7
 408 0078 09000000 		.word	9
 409 007c 05000000 		.word	5
 410              		.bss
 411              		.align	2
 412              		.set	.LANCHOR0,. + 0
 415              	outleft:
 416 0000 00000000 		.space	4
 419              	in:
 420 0004 00000000 		.space	48
 420      00000000 
 420      00000000 
 420      00000000 
 420      00000000 
 423              	out:
 424 0034 00000000 		.space	32
 424      00000000 
 424      00000000 
 424      00000000 
 424      00000000 
 425              		.text
 426              	.Letext0:
 427              		.file 2 "/nix/store/ys6f5rkagvk7j6mawa5fiakglv1568hl-gcc-arm-embedded-12.2.rel1/arm-none-eabi/incl
 428              		.file 3 "/nix/store/ys6f5rkagvk7j6mawa5fiakglv1568hl-gcc-arm-embedded-12.2.rel1/arm-none-eabi/incl
 429              		.file 4 "/nix/store/ys6f5rkagvk7j6mawa5fiakglv1568hl-gcc-arm-embedded-12.2.rel1/lib/gcc/arm-none-e
DEFINED SYMBOLS
                            *ABS*:0000000000000000 randombytes.c
     /tmp/ccCi4EWK.s:19     .text.randombytes:0000000000000000 $t
     /tmp/ccCi4EWK.s:25     .text.randombytes:0000000000000000 randombytes
     /tmp/ccCi4EWK.s:363    .text.randombytes:00000000000001b0 $d
     /tmp/ccCi4EWK.s:373    .rodata:0000000000000000 $d
     /tmp/ccCi4EWK.s:377    .rodata:0000000000000000 seed
     /tmp/ccCi4EWK.s:411    .bss:0000000000000000 $d
     /tmp/ccCi4EWK.s:415    .bss:0000000000000000 outleft
     /tmp/ccCi4EWK.s:419    .bss:0000000000000004 in
     /tmp/ccCi4EWK.s:423    .bss:0000000000000034 out

NO UNDEFINED SYMBOLS
